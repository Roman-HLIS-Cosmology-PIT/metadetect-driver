
# This workflow will install Python dependencies, run tests and report code coverage with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit test and code coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v5
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v6
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     sudo apt-get update
    #     python -m pip install --upgrade pip
    #     pip install -e .[dev]
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.pyver }}
        channels: conda-forge
        channel-priority: strict
        show-channel-urls: true
        miniforge-version: latest
    - name: configure conda and install code
      shell: bash -l {0}
      run: |
        conda config --set always_yes yes
        conda install --quiet --yes --file requirements-conda.txt
        python -m pip install -r requirements.txt
        python -m pip install -r requirements-dev.txt
        python -m pip install .[dev]
    - name: Run unit tests with pytest
      shell: bash -l {0}
      run: |
        pytest tests -vvv --cov=src/metadetect_driver --cov-report=xml
    - name: Upload coverage report to codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false  # Don't mark failure to upload coverage report as test failure.
